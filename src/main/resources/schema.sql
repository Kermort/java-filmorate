CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
  USER_ID INTEGER AUTO_INCREMENT,
  EMAIL VARCHAR_IGNORECASE NOT NULL,
  LOGIN VARCHAR_IGNORECASE NOT NULL,
  NAME VARCHAR_IGNORECASE NOT NULL,
  BIRTHDAY DATE,
  CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
  ID INTEGER AUTO_INCREMENT,
  USER_ID INTEGER NOT NULL,
  FRIEND_ID INTEGER NOT NULL,
  CONSTRAINT FRIENDS_PK PRIMARY KEY (ID),
  CONSTRAINT FRIENDS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID),
  CONSTRAINT FRIENDS_USER_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC."USER"(USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
  GENRE_ID INTEGER AUTO_INCREMENT,
  NAME VARCHAR_IGNORECASE NOT NULL,
  CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
  MPA_ID INTEGER AUTO_INCREMENT,
  NAME VARCHAR_IGNORECASE NOT NULL,
  CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
  FILM_ID INTEGER AUTO_INCREMENT,
  NAME VARCHAR_IGNORECASE NOT NULL,
  DESCRIPTION VARCHAR_IGNORECASE NOT NULL,
  MPA_ID INTEGER NOT NULL,
  RELEASE_DATE DATE NOT NULL,
  DURATION INTEGER NOT NULL,
  CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
  CONSTRAINT FILM_MPA_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
  ID INTEGER AUTO_INCREMENT,
  FILM_ID INTEGER NOT NULL,
  GENRE_ID INTEGER NOT NULL,
  CONSTRAINT FILM_GENRE_PK PRIMARY KEY (ID),
  CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
  CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_LIKES (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  FILM_ID INTEGER NOT NULL,
  USER_ID INTEGER NOT NULL,
  CONSTRAINT FILM_LIKES_PK PRIMARY KEY (ID),
  CONSTRAINT FILM_LIKES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
  CONSTRAINT FILM_LIKES_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID)
);
