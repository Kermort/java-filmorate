CREATE TABLE IF NOT EXISTS "USER" (
  USER_ID INTEGER AUTO_INCREMENT,
  EMAIL VARCHAR UNIQUE NOT NULL,
  LOGIN VARCHAR UNIQUE NOT NULL,
  NAME VARCHAR NOT NULL,
  BIRTHDAY DATE,
  CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
  USER_ID INTEGER NOT NULL,
  FRIEND_ID INTEGER NOT NULL,
  CONSTRAINT FRIENDS_PK PRIMARY KEY (USER_ID, FRIEND_ID),
  CONSTRAINT FRIENDS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID),
  CONSTRAINT FRIENDS_USER_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC."USER"(USER_ID)
);

CREATE TABLE IF NOT EXISTS GENRE (
  GENRE_ID INTEGER AUTO_INCREMENT,
  NAME VARCHAR_IGNORECASE NOT NULL,
  CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS MPA (
  MPA_ID INTEGER AUTO_INCREMENT,
  NAME VARCHAR_IGNORECASE NOT NULL,
  CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILM (
  FILM_ID INTEGER AUTO_INCREMENT,
  NAME VARCHAR NOT NULL,
  DESCRIPTION VARCHAR_IGNORECASE NOT NULL,
  MPA_ID INTEGER NOT NULL,
  RELEASE_DATE DATE NOT NULL,
  DURATION INTEGER NOT NULL,
  CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
  CONSTRAINT FILM_MPA_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
  FILM_ID INTEGER NOT NULL,
  GENRE_ID INTEGER NOT NULL,
  CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID, GENRE_ID),
  CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
  CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_LIKES (
  FILM_ID INTEGER NOT NULL,
  USER_ID INTEGER NOT NULL,
  CONSTRAINT FILM_LIKES_PK PRIMARY KEY (FILM_ID, USER_ID),
  CONSTRAINT FILM_LIKES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
  CONSTRAINT FILM_LIKES_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID)
);
